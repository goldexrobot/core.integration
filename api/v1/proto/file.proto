syntax = "proto3";

package core.backend.integration.api.v1.file;

option go_package="github.com/goldexrobot/core.backend.integration/api/v1/golang/file/file;file";

import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "validate/validate.proto"; // https://github.com/envoyproxy/protoc-gen-validate#constraint-rules

service File {
	// Get a file by ID
	rpc File(FileModel) returns (stream google.api.HttpBody) {
		option (google.api.http) = {
			get: "/v1/file/{id}"
		};
	}
}

message FileModel {
	string id = 1 [(validate.rules).string = { pattern: "^[a-zA-Z0-9]{32}$" }];
	reserved 2 to 5;
}

message FileChunk {
	bytes chunk = 1 [(validate.rules).bytes = { min_len: 1, max_len: 131072 }]; // max 128 KiB
	uint32 chunk_num = 2 [(validate.rules).uint32.gte = 1];
	uint32 total_chunks = 3 [(validate.rules).uint32.gte = 1];
	uint32 total_size = 4 [(validate.rules).uint32.gte = 1];
	string mime = 5 [(validate.rules).string = { min_len: 1, max_len: 32}];
	reserved 6 to 10;
}
